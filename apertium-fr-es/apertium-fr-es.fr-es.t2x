<?xml version="1.0" encoding="ISO-8859-1"?> <!-- -*- nxml -*- -->
<interchunk>
  <section-def-cats>

    <def-cat n="SN">
      <cat-item tags="SN.*"/>
    </def-cat>
    
    <def-cat n="negacio"><!-- BCN-->
      <cat-item tags="SN.DET.*.*.negacio"/>
    </def-cat>
    
    <def-cat n="pr"><!-- BCN-->
      <cat-item tags="PREP"/>
    </def-cat>
    
<!--
     <def-cat n="SN_nopron">
      <cat-item tags="SN.DET.*"/>
      <cat-item tags="SN.UNDET.*"/>
      <cat-item tags="SN.NUM.*"/>
    </def-cat>-->

    <def-cat n="SV">
				<cat-item tags="SV.*"/>
</def-cat>

 
    <def-cat n="vbcop">
      <cat-item tags="Vcop.*"/>
      <cat-item tags="SV.vbser.*"/>
    </def-cat>
	 
    <def-cat n="vblike">
      <cat-item tags="SV.like.*"/>
    </def-cat>
    
    <def-cat n="vbreporting"><!-- BCN-->
      <cat-item tags="SV.reporting.*"/>
    </def-cat>
    
    <def-cat n="there">
      <cat-item lemma="there" tags="adv"/>
    </def-cat>

     <def-cat n="thereis">
      <cat-item tags="Vcop.*"/>
      <cat-item lemma="verbcj" tags="SV.vbser.*"/>
      <cat-item lemma="auxmod_inf" tags="SV.vbser.*"/>
      <cat-item lemma="auxmod_mod_inf" tags="SV.vbser.*"/>
      <cat-item lemma="mod_inf" tags="SV.vbser.*"/>
      <cat-item lemma="mod_inf_perif" tags="SV.vbser.*"/>
      <cat-item lemma="have_pp" tags="SV.vbser.*"/>
      <cat-item lemma="verbcj_perif" tags="SV.vbser.*"/> 
    </def-cat>


	 <def-cat n="pro_vblike">
		 <cat-item lemma="pro_verbcj" tags="SV.like.*"/>
		 <cat-item lemma="pro_verbcj_perif" tags="SV.like.*"/>
		 <cat-item lemma="pro_auxmod_inf" tags="SV.like.*"/>
		 <cat-item lemma="pro_mod_inf" tags="SV.like.*"/>
		 <cat-item lemma="pro_mod_inf_perif" tags="SV.like.*"/>
		 <cat-item lemma="pro_auxmod_mod_inf" tags="SV.like.*"/>
		 <cat-item lemma="pro_have_pp" tags="SV.like.*"/>
		 <cat-item lemma="pro_be_ger" tags="SV.like.*"/>
		<cat-item lemma="pro_do_inf" tags="SV.like.*"/>
	 </def-cat>

     <def-cat n="ADV">
      <cat-item lemma="adv" tags="adv"/>
      <cat-item lemma="adv" tags="adv.*"/>
      <cat-item lemma="ne" tags="adv"/>
    </def-cat>

    <def-cat n="PRNS">
      <cat-item tags="PRN.subj.*"/>
    </def-cat>

    <def-cat n="SA">
      <cat-item tags="SA.*"/>
    </def-cat>

     <def-cat n="pp">
      <cat-item lemma="pp"  tags="SA.*"/>
      <cat-item lemma="adj"  tags="SA.*"/><!-- BCN per que agafi b�resolutions adopted -->
    </def-cat>

     <def-cat n="DET">
      <cat-item tags="DET.*"/>
    </def-cat>

    <def-cat n="RELNN">
      <cat-item tags="REL.nn.*"/>
    </def-cat>

 <def-cat n="RELAN">
      <cat-item tags="REL.an.*"/>
    </def-cat>
    
    <def-cat n="NUM">
      <cat-item tags="NUM.*"/>
    </def-cat>

     <def-cat n="punt">
      <cat-item tags="sent"/>
    </def-cat>

    <def-cat n="cnjcoo"> <!-- BCN-->
      <cat-item tags="cnjcoo"/>
    </def-cat>


  </section-def-cats>

  <section-def-attrs>

<def-attr n="pers">
          <attr-item tags="p1"/>
	  <attr-item tags="p2"/>
	  <attr-item tags="p3"/>
	  <attr-item tags="PD"/>
</def-attr>

      <def-attr n="gen">
          <attr-item tags="m"/>
          <attr-item tags="f"/>
	  <attr-item tags="mf"/>
	  <attr-item tags="GD"/>
	  <attr-item tags="nt"/>
      </def-attr>

   <def-attr n="nbr">
          <attr-item tags="sg"/>
	  <attr-item tags="pl"/>
	  <attr-item tags="sp"/>
	  <attr-item tags="ND"/>
      </def-attr>

      <def-attr n="temps">
          <attr-item tags="inf"/>
	  <attr-item tags="pres"/>
	  <attr-item tags="past"/>
	  <attr-item tags="pri"/>
	  <attr-item tags="ifip"/>
	  <attr-item tags="cni"/>
	  <attr-item tags="fti"/>
	  <attr-item tags="pp"/>
	  <attr-item tags="ger"/>
	  <attr-item tags="pprs"/>
	  <attr-item tags="subs"/>
	  
      </def-attr>

       <def-attr n="a_verb">
      <attr-item tags="vblex"/>	  
      <attr-item tags="vblex.pron"/>
      <attr-item tags="vbhaver"/>
      <attr-item tags="vbser"/>
      <attr-item tags="vbmod"/>
      <attr-item tags="HAVER"/>
    </def-attr>
      
  <def-attr n="a_SN">
          <attr-item tags="DET"/>
	  <attr-item tags="UNDET"/>
	  <attr-item tags="NUM"/>
	  <attr-item tags="PDET"/><!--'Per determinar', per a SN UNDET que han de passar a determinats, transformaci�que far�el postchunk detectant els PDET. -->
      </def-attr>

  </section-def-attrs>

  <section-def-vars>
    <def-var n="uno"/>
    <def-var n="nombre"/>
		<def-var n="genere"/>
  </section-def-vars>

<section-def-macros>

<def-macro n="assigna_gen_nbr" npar="1">
 <choose><!--To determine value of variables of gender and
                 number and propagate to other rules.  Variables are
                 not used again in this rule -->
		<when> 
			<test>
				<equal>
					<clip pos="1" part="nbr"/>
					<lit-tag v="pl"/>
				</equal>
			</test>
			<let><var n="nombre"/><lit-tag v="pl"/></let>
		</when>
		<when>
			<test>
				<or>
				<equal>
					<clip pos="1" part="nbr"/>
					<lit-tag v="sg"/>
				</equal>
				<equal>
					<var n="nombre"/>
					<lit v=""/>
				</equal>
				</or>
			</test>
			<let><var n="nombre"/><lit-tag v="sg"/></let>
		</when>
	</choose> 
	<choose>
		<when> 
			<test>
				<equal>
					<clip pos="1" part="gen"/>
					<lit-tag v="f"/>
				</equal>
			</test>
			<let><var n="genere"/><lit-tag v="f"/></let>
		</when>
		<when> 
			<test>
				<or>
				<equal>
					<clip pos="1" part="gen"/>
					<lit-tag v="m"/>
				</equal>
				<equal>
					<var n="genere"/>
					<lit v=""/>
				</equal>
				</or>
			</test>
			<let><var n="genere"/><lit-tag v="m"/></let>
		</when>
	</choose> 
	<choose>
		<when> 
			<test>
				<equal>
					<clip pos="1" part="nbr"/>
					<lit-tag v="ND"/>
				</equal>
			</test>
			<let><clip pos="1" part="nbr"/><var n="nombre"/></let>
		</when>
	</choose>
	<choose>
		<when> 
			<test>
				<equal>
					<clip pos="1" part="gen"/>
					<lit-tag v="GD"/>
				</equal>
			</test>
			<let><clip pos="1" part="gen"/><var n="genere"/></let>
		</when>
	</choose>

</def-macro>

<def-macro n="concord_sa" npar="2"><!--assinga el gen i el nbr del sn en els sa en les frases amb verb copulatiu (p.ex "la perspectiva de tu tía es interesante" -> "interesante" concordarà amb "aperçu")-->
					<choose>
						<when> 
							<test>
								<equal>
									<clip pos="1" part="gen"/>
									<lit-tag v="f"/>
								</equal>
							</test>
							<let>
								<clip pos="2" part="gen"/>
								<lit-tag v="f"/>
							</let>
						</when>
						<otherwise>
							<let>
								<clip pos="2" part="gen"/>
								<lit-tag v="m"/>
							</let>
						</otherwise>
					</choose>
	
					<choose>
						<when> 
							<test>
								<equal>
									<clip pos="1" part="nbr"/>
									<lit-tag v="pl"/>
								</equal>
							</test>
							<let>
								<clip pos="2" part="nbr"/>
								<lit-tag v="pl"/>
							</let>
						</when>
						<otherwise>
							<let>
								<clip pos="2" part="nbr"/>
								<lit-tag v="sg"/>
							</let>
						</otherwise>
					</choose>
	
</def-macro>

<def-macro n="concord_sn" npar="2"> <!--asgina gen i nbr en els sn GD o ND quan van seguits de vcop. (p.ex. "esta chica es mi ayudante)-->
	<choose>
		<when> 
			<test>
					<equal>
						<clip pos="2" part="gen"/>
						<lit-tag v="GD"/>
					</equal>
			</test>
					<choose>
						<when> 
							<test>
								<equal>
									<clip pos="1" part="gen"/>
									<lit-tag v="f"/>
								</equal>
							</test>
							<let>
								<clip pos="2" part="gen"/>
								<lit-tag v="f"/>
							</let>
						</when>
						<otherwise>
							<let>
								<clip pos="2" part="gen"/>
								<lit-tag v="m"/>
							</let>
						</otherwise>
					</choose>
		</when>
	</choose>
	<choose>
		<when> 
			<test>
					<equal>
						<clip pos="2" part="nbr"/>
						<lit-tag v="ND"/>
					</equal>
			</test>
					<choose>
						<when> 
							<test>
								<equal>
									<clip pos="1" part="nbr"/>
									<lit-tag v="pl"/>
								</equal>
							</test>
							<let>
								<clip pos="2" part="nbr"/>
								<lit-tag v="pl"/>
							</let>
						</when>
						<otherwise>
							<let>
								<clip pos="2" part="nbr"/>
								<lit-tag v="sg"/>
							</let>
						</otherwise>
					</choose>
		</when>
	</choose>
</def-macro>
  <def-macro n="f_bcond" npar="1"><!--Per mirar si el blanc cont�o no format. Cal posar aquesta funci�en les regles en qu�desaparegui alguna paraula, per tal de decidir si el blanc de la paraula eliminada s'ha d'eliminar o conservar. Si cont�format cal conservar-la, si no en cont�cal eliminar-la perqu�no apareguin dos espais seguits. -->
     	<choose>
     	  <when>
     	    <test>
     	      <not>
     	        <equal>
     	          <b pos="1"/>
     	          <lit v=" "/>
     	        </equal>
              </not>
     	    </test>
            <out>
              <b pos="1"/>
            </out>
          </when>     	    
     	</choose>
     </def-macro>

</section-def-macros>

  <section-rules>
   

	<!--			<out> 
					<chunk>
						<lit v="pr"/>
						<lit-tag v="PREP"/>
						<lit v="{^"/>
						<get-case-from pos="1">
							<lit v="a"/>
						</get-case-from>
						<lit-tag v="pr"/>
						<lit v="$}"/>
					</chunk>
					<b/>
					<chunk><!-#-envio el chunk amb el SN-#->
						<clip pos="1" part="lem"/>
						<clip pos="1" part="tags"/>
						<clip pos="1" part="chcontent"/>
					</chunk>
					<b pos="1"/>-->

<!--REGLES GENERALS -->
<rule comment="REGLA: SN">
	<pattern>
		<pattern-item n="SN"/>
	</pattern>
	<action>
	<call-macro n="assigna_gen_nbr">
		<with-param pos="1"/>
	</call-macro>
			<out>
				<chunk>
					<clip pos="1" part="lem"/>
					<clip pos="1" part="tags"/>
					<clip pos="1" part="chcontent"/>
				</chunk>
			</out>
</action>
</rule>
<rule comment="REGLA: SA">
	<pattern>
		<pattern-item n="SA"/>
	</pattern>
	<action>
	<call-macro n="assigna_gen_nbr">
		<with-param pos="1"/>
	</call-macro>
			<out>
				<chunk>
					<clip pos="1" part="lem"/>
					<clip pos="1" part="tags"/>
					<clip pos="1" part="chcontent"/>
				</chunk>
			</out>
</action>
</rule>
<rule comment="REGLA: det">
	<pattern>
		<pattern-item n="DET"/>
	</pattern>
	<action>
	<call-macro n="assigna_gen_nbr">
		<with-param pos="1"/>
	</call-macro>
			<out>
				<chunk>
					<clip pos="1" part="lem"/>
					<clip pos="1" part="tags"/>
					<clip pos="1" part="chcontent"/>
				</chunk>
			</out>
</action>
</rule>

<rule comment="REGLA: SN SV">
	<pattern>
		<pattern-item n="SN"/>
		<pattern-item n="SV"/>
	</pattern>
	<action>
	<call-macro n="assigna_gen_nbr">
		<with-param pos="1"/>
	</call-macro>
	<choose>
		<when>
			<test>
				<equal caseless="yes">
					<clip pos="1" part="lem"/>
					<lit v="prnsubj"/>
				</equal>
				<equal>
					<clip pos="2" part="pers"/>
					<clip pos="1" part="pers"/>
				</equal>
				<equal>
					<clip pos="2" part="nbr"/>
					<clip pos="1" part="nbr"/>
				</equal>
			</test>
			<out>
				<chunk><!--el pronom no l'envio, nom� el 2n chunk -->
					<get-case-from pos="1">
						<clip pos="2" part="lem"/>
					</get-case-from>
					<clip pos="2" part="tags"/>
					<clip pos="2" part="chcontent"/>
				</chunk>
			</out>
		</when>
		<otherwise><!--Quan SN no � pronom subjecte, per tant, quan � qualsevol altre SN -->
			<out>
				<chunk>
					<clip pos="1" part="lem"/>
					<clip pos="1" part="tags"/>
					<clip pos="1" part="chcontent"/>
				</chunk>
				<b pos="1"/>
				<chunk>
					<clip pos="2" part="lem"/>
					<clip pos="2" part="tags"/>
					<clip pos="2" part="chcontent"/>
				</chunk>
			</out>
		</otherwise>
	</choose>	
</action>
</rule>

<rule comment="REGLA: SN adv SV">
	<pattern>
		<pattern-item n="SN"/>
		<pattern-item n="ADV"/>
		<pattern-item n="SV"/>
	</pattern>
	<action>
	<call-macro n="assigna_gen_nbr">
		<with-param pos="1"/>
	</call-macro>
	<choose>
		<when>
			<test>
				<equal caseless="yes">
					<clip pos="1" part="lem"/>
					<lit v="prnsubj"/>
				</equal>
				<equal>
					<clip pos="3" part="pers"/>
					<clip pos="1" part="pers"/>
				</equal>
				<equal>
					<clip pos="3" part="nbr"/>
					<clip pos="1" part="nbr"/>
				</equal>
			</test>
			<out>
			<chunk>
					<get-case-from pos="1">
						<clip pos="2" part="lem"/>
					</get-case-from>
					<clip pos="2" part="tags"/>
					<clip pos="2" part="chcontent"/>
				</chunk>
				<b pos="2"/>
				<chunk><!--el pronom no l'envio, nom� el 2n chunk -->
					<clip pos="3" part="lem"/>
					<clip pos="3" part="tags"/>
					<clip pos="3" part="chcontent"/>
				</chunk>
			</out>
		</when>
		<otherwise><!--Quan SN no � pronom subjecte, per tant, quan � qualsevol altre SN -->
			<out>
				<chunk>
					<clip pos="1" part="lem"/>
					<clip pos="1" part="tags"/>
					<clip pos="1" part="chcontent"/>
				</chunk>
				<b pos="1"/>
				<chunk>
					<clip pos="2" part="lem"/>
					<clip pos="2" part="tags"/>
					<clip pos="2" part="chcontent"/>
				</chunk>
				<b pos="2"/>
				<chunk>
					<clip pos="3" part="lem"/>
					<clip pos="3" part="tags"/>
					<clip pos="3" part="chcontent"/>
				</chunk>
			</out>
		</otherwise>
	</choose>	
</action>
</rule>


<rule comment="REGLA: SN vbcop SA">
	<pattern>
		<pattern-item n="SN"/>
		<pattern-item n="vbcop"/>
		<pattern-item n="SA"/>
	</pattern>
	<action>
	<call-macro n="concord_sa">
		<with-param pos="1"/>
		<with-param pos="3"/>
	</call-macro>
	<call-macro n="assigna_gen_nbr">
		<with-param pos="1"/>
	</call-macro>
	<choose>
		<when>
			<test>
				<equal caseless="yes">
					<clip pos="1" part="lem"/>
					<lit v="prnsubj"/>
				</equal>
				<equal>
					<clip pos="2" part="pers"/>
					<clip pos="1" part="pers"/>
				</equal>
				<equal>
					<clip pos="2" part="nbr"/>
					<clip pos="1" part="nbr"/>
				</equal>
			</test>
			<out>
				<chunk>
					<get-case-from pos="1">
						<clip pos="2" part="lem"/>
					</get-case-from>
					<clip pos="2" part="tags"/>
					<clip pos="2" part="chcontent"/>
				</chunk>
			</out>
		</when>
		<otherwise>
			<out>
				<chunk>
					<clip pos="1" part="lem"/>
					<clip pos="1" part="tags"/>
					<clip pos="1" part="chcontent"/>
				</chunk>
				<b pos="1"/>
				<chunk>
					<clip pos="2" part="lem"/>
					<clip pos="2" part="tags"/>
					<clip pos="2" part="chcontent"/>
				</chunk>
			</out>
		</otherwise>
	</choose>	
	<out>
		<b pos="2"/>
		<chunk>
			<clip pos="3" part="whole"/>
		</chunk>
	</out>
</action>
</rule>	

<rule comment="REGLA: SN vbcop SN">
	<pattern>
		<pattern-item n="SN"/>
		<pattern-item n="vbcop"/>
		<pattern-item n="SN"/>
	</pattern>
	<action>
	<call-macro n="concord_sn">
		<with-param pos="1"/>
		<with-param pos="3"/>
	</call-macro>
	<call-macro n="assigna_gen_nbr">
		<with-param pos="1"/>
	</call-macro>
	<choose>
		<when>
			<test>
				<equal caseless="yes">
					<clip pos="1" part="lem"/>
					<lit v="prnsubj"/>
				</equal>
				<equal>
					<clip pos="2" part="pers"/>
					<clip pos="1" part="pers"/>
				</equal>
				<equal>
					<clip pos="2" part="nbr"/>
					<clip pos="1" part="nbr"/>
				</equal>
			</test>
			<out>
				<chunk>
					<get-case-from pos="1">
						<clip pos="2" part="lem"/>
					</get-case-from>
					<clip pos="2" part="tags"/>
					<clip pos="2" part="chcontent"/>
				</chunk>
			</out>
		</when>
		<otherwise>
			<out>
				<chunk>
					<clip pos="1" part="lem"/>
					<clip pos="1" part="tags"/>
					<clip pos="1" part="chcontent"/>
				</chunk>
				<b pos="1"/>
				<chunk>
					<clip pos="2" part="lem"/>
					<clip pos="2" part="tags"/>
					<clip pos="2" part="chcontent"/>
				</chunk>
			</out>
		</otherwise>
	</choose>	
	<out>
		<b pos="2"/>
		<chunk>
			<clip pos="3" part="whole"/>
		</chunk>
	</out>
</action>
</rule>	

<rule comment="REGLA: SN SP vbcop SA">
	<pattern>
		<pattern-item n="SN"/>
		<pattern-item n="pr"/>
		<pattern-item n="SN"/>
		<pattern-item n="vbcop"/>
		<pattern-item n="SA"/>
	</pattern>
	<action>
	<call-macro n="assigna_gen_nbr">
		<with-param pos="1"/>
	</call-macro>
	<call-macro n="assigna_gen_nbr">
		<with-param pos="3"/>
	</call-macro>
	<call-macro n="concord_sa">
		<with-param pos="1"/>
		<with-param pos="5"/>
	</call-macro>
	<out>
		<chunk>
			<clip pos="1" part="lem"/>
			<clip pos="1" part="tags"/>
			<clip pos="1" part="chcontent"/>
		</chunk>
		<b pos="1"/>
		<chunk>
			<clip pos="2" part="lem"/>
			<clip pos="2" part="tags"/>
			<clip pos="2" part="chcontent"/>
		</chunk>
		<b pos="2"/>
		<chunk>
			<clip pos="3" part="lem"/>
			<clip pos="3" part="tags"/>
			<clip pos="3" part="chcontent"/>
		</chunk>
		<b pos="3"/>
		<chunk>
			<clip pos="4" part="lem"/>
			<clip pos="4" part="tags"/>
			<clip pos="4" part="chcontent"/>
		</chunk>
		<b pos="4"/>
		<chunk>
			<clip pos="5" part="lem"/>
			<clip pos="5" part="tags"/>
			<clip pos="5" part="chcontent"/>
		</chunk>

	</out>
</action>
</rule>
	 

<rule comment="REGLA: SN SP vbcop SN">
	<pattern>
		<pattern-item n="SN"/>
		<pattern-item n="pr"/>
		<pattern-item n="SN"/>
		<pattern-item n="vbcop"/>
		<pattern-item n="SN"/>
	</pattern>
	<action>
	<call-macro n="assigna_gen_nbr">
		<with-param pos="1"/>
	</call-macro>
	<call-macro n="assigna_gen_nbr">
		<with-param pos="3"/>
	</call-macro>
	<call-macro n="concord_sn">
		<with-param pos="1"/>
		<with-param pos="5"/>
	</call-macro>
	<out>
		<chunk>
			<clip pos="1" part="lem"/>
			<clip pos="1" part="tags"/>
			<clip pos="1" part="chcontent"/>
		</chunk>
		<b pos="1"/>
		<chunk>
			<clip pos="2" part="lem"/>
			<clip pos="2" part="tags"/>
			<clip pos="2" part="chcontent"/>
		</chunk>
		<b pos="2"/>
		<chunk>
			<clip pos="3" part="lem"/>
			<clip pos="3" part="tags"/>
			<clip pos="3" part="chcontent"/>
		</chunk>
		<b pos="3"/>
		<chunk>
			<clip pos="4" part="lem"/>
			<clip pos="4" part="tags"/>
			<clip pos="4" part="chcontent"/>
		</chunk>
		<b pos="4"/>
		<chunk>
			<clip pos="5" part="lem"/>
			<clip pos="5" part="tags"/>
			<clip pos="5" part="chcontent"/>
		</chunk>
	</out>
</action>
</rule>
	 




 <rule> <!-- REGLA: reset variables-->
      <pattern>
	<pattern-item n="punt"/>
      </pattern>
      <action>
	<let>
	  <var n="nombre"/>
	  <lit-tag v="sg"/>
	</let>
	<out>
	  <chunk>
	    <clip pos="1" part="whole"/>
	  </chunk>
	</out>
      </action>
</rule>



  </section-rules>
</interchunk>
